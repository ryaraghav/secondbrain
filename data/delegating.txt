________________


As a manager, your role likely involves assigning projects, tasks, initiatives, areas of responsibility—and, here’s the most important part: setting folks up for success.
This is where the disconnect happens:
* Team members complain that their managers don’t set expectations, share context, or describe what great looks like.
* Managers think they’re explaining an idea well (this is TBD), and get frustrated that their team members need too much hand-holding and produce low quality work.
There are many aspects to delegating well, but one that I think is underrated is this: Taking the time upfront to explain a project thoughtfully.
Instead, many managers toss a request over the wall with zero context and say “do this.”
Now, the latter might work if your direct reports are more senior. But many managers have teams with junior and mid-level operators who greatly benefit from a bit of context. We’re talking 10-15 minutes here—I’d say that’s time well spent.
Doing this will help your team save time, minimize miscommunication, execute with confidence, and ship faster.
Subscribed
________________


Over the years, I developed rough steps when explaining projects to direct reports, dotted-line reports, vendors, agencies, contractors, recruiters, and anyone I’m managing formally or informally.
Here are the five areas I think about:
1. Increase comprehension: Am I explaining in a way that’s easy to understand?
2. Increase buy-in: Am I getting the person excited?
3. Derisk: Am I addressing obvious risks?
4. Confirm alignment: Am I giving them a chance to speak up?
5. Feedback loop: Am I creating the shortest feedback loop possible?
These apply for folks at all levels. The more senior the person, the less you’ll need to explain. The more junior, the more you should spell things out.
Use this as a checklist and starting point when you’re explaining a project. Don’t be intimidated by the sub-questions within the five main points—they are meant to give you ideas of what to consider, and not every item will be applicable to you.
Let’s dive into each one.
Increase comprehension: Am I explaining in a way that’s easy to understand?
You need to give your direct report enough context for them to do a good job. When in doubt, come back to this as your North Star.
For example, ask yourself:
Who is this person and how much do they already know? Put yourself in their shoes. Every situation, project, etc will be different, so use your judgment. Am I setting this person up for success? What’s the next obvious question they might have? Considering their POV will bring to mind a bunch of things you should probably tell them. For example, you’d share different context with a new external contractor vs a direct report you’ve worked with for years on similar initiatives.
Why are we doing this and how does it fit into the bigger picture? It’s grounding to know how a project fits into broader team goals. Your direct reports will be able to make better decisions because they’ll know the underlying principles of why they’re doing this, not only zoomed-in tactics or mechanical directions.
What do they need in order to do this? This includes access to tools, platforms, spreadsheets, docs, assets, budget, people, etc. Have this ready beforehand, or be ready to list this out verbally so the person can get these assets on their own. This is like mise en place in cooking—you want to gather everything the person might need, or tell them what to gather.
How can I make this more instantly obvious? This is where showing is helpful. This includes examples, models, competitive samples, designs, screenshots, screenshare, analogies, etc. You want to help them pattern match and viscerally understand what you’re saying. Words are somewhat inadequate, but the best we’ve got in most cases. If you can, combine words with images and visuals.
What’s the timeline and general level of importance? There are many things where I don’t want my team using precious brainpower because it’s a “good enough” situation. It’s not always obvious, so be explicit if you can.
Am I sharing the right details in the right areas? The more details you share, the more your recipient has to wade through information to discern what’s important. When you start going on a tangent, make sure those details are worth sharing.
Increase buy-in: Am I getting the person excited?
You have the ability, using your words, to make anything sound more exciting, interesting, rewarding, relevant, or intellectually stimulating.
Explain how this contributes to the business. The difference between meaningless busywork vs one fueled by purpose can simply be: Do I feel like this is contributing to the business and/or my learning? People want to feel like their work matters. This is free, but many managers don’t use this lever. Never toss a task over a wall and just expect people to do it. Take 30 seconds to explain why it matters. (I mentioned this in the section above too, so think of it as a two-for-one that increases both comprehension and buy-in.)
Share how this relates to building skills they want to learn. For example, I needed a direct report to clean data across multiple platforms and sources, which was kind of a slog. In a previous 1:1, he mentioned wanting to work more with data as a career growth goal. So I framed the project like this:
“You mentioned wanting to work more with data. Having clean data is important because none of our insights matter if the raw inputs are unreliable. We currently have 3-4 platforms collecting data and we can’t do anything with it because there are dupes, fields being captured for some but not others, numbers aren’t rolling up, etc. I’d love for you to clean this data.”
Align the task with what this person cares about and already believes is a priority. This actually works for all directions, not just managing down. This works equally well when pitching your ideas to your manager or cross-functional peers. Fit your project into their world, not the other way around. 
Make it sound as fun as it can sound. If the baseline “fun level” is a 4/10, you can make it a 1/10 by explaining it poorly. And you can make it a 6-7 if you tried to make it sound exciting. Find the excitement in a project, so you can transfer that energy to your team.
Subscribed
Derisk: Am I addressing obvious risks?
Don’t burn your energy on lame, avoidable missteps. Here’s where derisking comes in.
What’s most likely to go wrong? What can I do to prevent that from happening? These two questions pretty much cover 99% of derisking. If the stakes are low, spend less time on this. If the stakes are high, come up with a more comprehensive set of risks so you can assess the likelihood and impact of each issue.
Embrace a healthy sense of paranoia. Personally, I ask myself the two questions above all day, every day—I have a constant filter humming in my mind of what could potentially go wrong and how to shift the odds to a more favorable outcome. I’m hyper-vigilant, which has pros and cons like all strengths do, but overall I consider it quite valuable. If this isn’t your natural way of thinking, it’s a good skill to learn. Over time, it doesn’t take much conscious effort because you build up muscle memory. As Andy Grove, CEO of Intel, says, “Only the paranoid survive.”
Pattern match. Thinking of a previous situation will bring up tacit knowledge and reminders for yourself. For example, the last time I worked with an Upwork freelancer, I wished I had been clearer about the end result I wanted. Eventually I said, “I want to be able to say ‘Each of these three pages converted at these rates.’ This allowed the freelancer to separate the background “how I pulled the data” vs the direct one-sentence final answer I was looking for. I only wish I did this sooner. Ask yourself:
Based on the last time I did this or interacted with someone like this, what came up? What should I remember to do now?
Share what not to do. Sometimes you can already tell what the most obvious interpretation is, and that’s not what you mean. If you can think of what not to do, share that upfront proactively.
Confirm alignment: Am I giving them a chance to speak up?
Tell me if you’ve heard this before, or said this yourself:
CEO: “I’ve said this 20 times. How do folks not get it?” 
Leadership team: “You mentioned this once, maybe twice maximum in passing.”
Broader team: “Wait, when did you say this at all?”
Which is true? All of them. Language is kind of inadequate, but it’s the best lever we have. Which is why you need to…
Be more explicit than you think you need to be. You are always clearer in your own mind vs others’ experience of listening to you. This is why every leader feels like they have to repeat themselves, and I’ve come to believe there’s no way around this. You should treat it as a constraint so you won’t be as frustrated when it happens. And you should be prepared to be more explicit than you think you need to be.
Stop talking sooner. After I’m on a roll giving a monologue, at some point I’ll stop to ask what resonated and what my direct report heard. At that point, I usually realize they got 20% of what I said. “But my brilliant point about x! What about the thing I said about Y? They didn’t even mention my insight around Z??” Let the other person share what they’re hearing.
Ask what parts were confusing. Your team doesn’t want to feel dumb or admit they missed something. So you have to make it a positive experience to ask clarifying questions. Ideally, they ask in the moment but if they think of questions later, they should still speak up. The worst: They say they get it, but spin their wheels guessing what to do because they want to seem independent. Say this:
“Btw I might not have explained well, so you should ask anything and everything that’s coming to mind for you.”
Get their initial reaction in the moment. It can seem patronizing to ask folks to repeat back what they heard, so my goal is simply to get them to share what’s coming to mind. If there are holes in their recap, I can fill in the blanks. And I get valuable information on what stuck out in their mind. Say this:
“Okay, I shared a lot. I’d love to make sure we’re on the same page. What are your reactions? Thoughts on anything I missed, any risks you see, etc?”
Subscribed
Shorten feedback loops: Am I creating the shortest feedback loop possible?
In general, it’s better to find out if you’re aligned sooner rather than later. Even the best explanations leave room for misinterpretation, so in my experience, the best way to address is to have a shorter feedback loop.
Keep them on the hook in the moment. Go a few steps further than you think you need to while you’re together. Not later—now. This brings issues upstream and saves one round of future alignment. This is incredibly useful and an underused lever. It will give them a head start when they go off on their own. Say this:
“So what are your initial thoughts on what we should do?”
Shorten the feedback loops until it’s uncomfortable. Shorten the feedback loop, then shorten again. If you’re thinking 2 weeks, can you do it in 2 days? Your direct reports will appreciate this because (a) it’s demoralizing to work on something your manager won’t find valuable and (b) it relieves the pressure to share work that’s perfect. To be clear, you’re not saying the project needs to be complete—you’re simply setting a time to check in. Say this:
“Take a stab for 2 hours and let’s check in. You can show me what you have and what you learned so far. This will help us surface any unknown unknowns that might pop up that we can’t foresee at the moment too.”
Set a timeline on when to follow up. Many leaders don’t do this, then get annoyed when they haven’t heard about the project in 3 weeks. Never leave a conversation without agreeing on when you’re going to check in next. It keeps the person on the hook and puts the ball in their court.
“Let’s review a shitty first draft to align on the general direction. When do you want to meet?”
A few last thoughts:
* The five steps aren’t necessarily linear or mutually exclusive, meaning I switch between thinking about these. I roughly start with these buckets in order, then quickly start jumping between them.
* Writing directions is hard mode because it requires more precision than you may have time for. It’s easier to do a call. You should still try to get your ducks in a row to make the best use of everyone’s time.
* Give an async overview when possible. For example, do a Loom walkthrough where you can show your screen and add voiceover because it will make your meeting more efficient. Plus, your direct reports can pause the recording, watch on 2x speed, and refer back to it. I’ve gotten great feedback from doing this. When you meet live, you can jump in deeper, faster.
If you’re wondering if you have time to do this, the answer is yes. You can mentally run through this checklist in 5 minutes if needed, and surface items you might have forgotten to mention otherwise.
There will still be issues to clarify and the need to collaborate because you’re not copying-pasting your full knowledge and consciousness into the other person. But you’ll spend time on better questions and better mistakes, and this higher baseline of effectiveness is more fun for everyone involved.